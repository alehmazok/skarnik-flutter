# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  flutter_test:
    name: Run flutter test and analyze
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.22.2'

      - run: flutter pub get
      - run: flutter analyze --no-fatal-infos
      - run: flutter test

#  build_apk:
#    name: Build apk in release mode and upload it to Firebase App Distribution
#    needs: [ flutter_test ]
#    runs-on: ubuntu-latest
#    timeout-minutes: 30
#
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '12.x'
#      - uses: subosito/flutter-action@v1
#        with:
#          flutter-version: '2.0.2'
#
#      - name: Create google_services.json file
#        run: echo ${{secrets.GOOGLE_SERVICES_JSON_BASE64}} | base64 -d > android/app/google_services.json
#
#      - run: flutter pub get
#      - run: flutter clean
#      - run: flutter build apk --release -t lib/main_production.dart --dart-define=AUTOMATICA_API_HOST=${{secrets.AUTOMATICA_API_HOST}} --no-sound-null-safety
#
#      - name: Upload apk to Firebase App Distribution
#        uses: wzieba/Firebase-Distribution-Github-Action@v1
#        with:
#          appId: ${{secrets.FIREBASE_APP_ID}}
#          token: ${{secrets.FIREBASE_TOKEN}}
#          file: build/app/outputs/flutter-apk/app-release.apk
#          groups: Personal
